# =============================================================================
# PROJECT-SPECIFIC
# =============================================================================

# Personal notes and work-in-progress documentation
rich-notes.md
BLOG_STRATEGY.md
QUICK_REFERENCE.md
docs/
*.bak

# Test files
test_threading.py

# Application data and history
data/
data/history/
data/*.json

# Config backups created by switch-config.sh
config/*.backup

# =============================================================================
# PYTHON
# =============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
*.py.cover

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff
instance/
.webassets-cache

# Scrapy stuff
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
.envrc

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# Celery stuff
celerybeat-schedule
celerybeat.pid

# =============================================================================
# PACKAGE MANAGERS & DEPENDENCY TOOLS
# =============================================================================

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock
#poetry.toml

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   https://pdm-project.org/en/latest/usage/project/#working-with-version-control
#pdm.lock
.pdm.toml
.pdm-build/
.pdm-python

# UV (uv package manager)
#   Similar to other lock files, uv.lock should generally be included in version control
#uv.lock

# pixi
#   Pixi creates a virtual environment in the .pixi directory
#pixi.lock
.pixi

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# PyPI configuration file
.pypirc

# =============================================================================
# TYPE CHECKERS & LINTERS
# =============================================================================

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Ruff
.ruff_cache/

# Cython debug symbols
cython_debug/

# =============================================================================
# IDEs & EDITORS
# =============================================================================

# PyCharm / JetBrains
#   JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#   be added to the global gitignore or merged into this project gitignore.
.idea/

# VS Code / Visual Studio Code
#   Visual Studio Code specific template is maintained in a separate VisualStudioCode.gitignore
#   that can be added to the global gitignore or merged into this file.
.vscode/

# Cursor AI Editor
#   Cursor is an AI-powered code editor. `.cursorignore` specifies files/directories to
#   exclude from AI features like autocomplete and code analysis.
#   Refer to https://docs.cursor.com/context/ignore-files
.cursorignore
.cursorindexingignore

# =============================================================================
# SPECIALIZED PYTHON TOOLS
# =============================================================================

# Abstra (AI-powered process automation framework)
#   Learn more at https://abstra.io/docs
.abstra/

# Marimo (reactive Python notebooks)
__marimo__/
marimo/_lsp/
marimo/_static/

# mkdocs documentation
/site

# =============================================================================
# OPERATING SYSTEMS
# =============================================================================

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Linux
*~
